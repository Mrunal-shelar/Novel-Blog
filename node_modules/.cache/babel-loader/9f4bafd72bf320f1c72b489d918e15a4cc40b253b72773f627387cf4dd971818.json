{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mrudula\\\\OneDrive\\\\Desktop\\\\Mrunal\\\\prepinsta\\\\Batch-02\\\\Week_08\\\\novel-blog\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport UploadNovelForm from './UploadNovelForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [novels, setNovels] = useState([]); // List of novels\n  const [selectedNovel, setSelectedNovel] = useState(null); // Selected novel for details view\n  const [view, setView] = useState('home'); // Tracks current view (home, upload, details)\n  const [searchQuery, setSearchQuery] = useState(''); // Search query state\n\n  // Load novels from localStorage when the component first mounts\n  useEffect(() => {\n    const savedNovels = JSON.parse(localStorage.getItem('novels')) || [];\n    setNovels(savedNovels);\n  }, []);\n\n  // Save novels to localStorage whenever the novels state changes\n  useEffect(() => {\n    localStorage.setItem('novels', JSON.stringify(novels));\n  }, [novels]);\n\n  // Function to add a new novel and switch back to home view\n  const addNovel = novel => {\n    setNovels([...novels, novel]); // Add the new novel to the list\n    setView('home'); // Switch back to the home view immediately after uploading\n  };\n  const selectNovel = novel => {\n    setSelectedNovel(novel);\n    setView('details'); // Switch to the details view\n  };\n\n  // Filter novels based on the search query\n  const filteredNovels = novels.filter(novel => novel.title.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [view === 'home' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Novel List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for a novel\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView('upload'),\n        children: \"Upload a Novel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredNovels.length > 0 ? filteredNovels.map((novel, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => selectNovel(novel),\n          children: novel.title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No novels found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), view === 'upload' && /*#__PURE__*/_jsxDEV(UploadNovelForm, {\n      addNovel: addNovel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }, this), \" \", view === 'details' && selectedNovel && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: selectedNovel.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Author: \", selectedNovel.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Genre: \", selectedNovel.genre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Summary: \", selectedNovel.summary]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedNovel.imageUrl,\n        alt: selectedNovel.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView('home'),\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8C63IlaAWfbeNw5II678F7F5/zs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","UploadNovelForm","jsxDEV","_jsxDEV","App","_s","novels","setNovels","selectedNovel","setSelectedNovel","view","setView","searchQuery","setSearchQuery","savedNovels","JSON","parse","localStorage","getItem","setItem","stringify","addNovel","novel","selectNovel","filteredNovels","filter","title","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","length","map","index","author","genre","summary","src","imageUrl","alt","_c","$RefreshReg$"],"sources":["C:/Users/Mrudula/OneDrive/Desktop/Mrunal/prepinsta/Batch-02/Week_08/novel-blog/src/App.js"],"sourcesContent":["\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport UploadNovelForm from './UploadNovelForm';\n\nfunction App() {\n  const [novels, setNovels] = useState([]); // List of novels\n  const [selectedNovel, setSelectedNovel] = useState(null); // Selected novel for details view\n  const [view, setView] = useState('home'); // Tracks current view (home, upload, details)\n  const [searchQuery, setSearchQuery] = useState(''); // Search query state\n\n  // Load novels from localStorage when the component first mounts\n  useEffect(() => {\n    const savedNovels = JSON.parse(localStorage.getItem('novels')) || [];\n    setNovels(savedNovels);\n  }, []);\n\n  // Save novels to localStorage whenever the novels state changes\n  useEffect(() => {\n    localStorage.setItem('novels', JSON.stringify(novels));\n  }, [novels]);\n\n  // Function to add a new novel and switch back to home view\n  const addNovel = (novel) => {\n    setNovels([...novels, novel]); // Add the new novel to the list\n    setView('home'); // Switch back to the home view immediately after uploading\n  };\n\n  const selectNovel = (novel) => {\n    setSelectedNovel(novel);\n    setView('details'); // Switch to the details view\n  };\n\n  // Filter novels based on the search query\n  const filteredNovels = novels.filter((novel) =>\n    novel.title.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <div>\n      {view === 'home' && (\n        <div>\n          <h1>Novel List</h1>\n\n          {/* Search Bar */}\n          <input\n            type=\"text\"\n            placeholder=\"Search for a novel\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n          />\n\n          <button onClick={() => setView('upload')}>Upload a Novel</button>\n\n          <ul>\n            {filteredNovels.length > 0 ? (\n              filteredNovels.map((novel, index) => (\n                <li key={index} onClick={() => selectNovel(novel)}>\n                  {novel.title}\n                </li>\n              ))\n            ) : (\n              <p>No novels found</p>\n            )}\n          </ul>\n        </div>\n      )}\n\n      {view === 'upload' && <UploadNovelForm addNovel={addNovel} />} {/* Pass addNovel as prop */}\n\n      {view === 'details' && selectedNovel && (\n        <div>\n          <h1>{selectedNovel.title}</h1>\n          <p>Author: {selectedNovel.author}</p>\n          <p>Genre: {selectedNovel.genre}</p>\n          <p>Summary: {selectedNovel.summary}</p>\n          <img src={selectedNovel.imageUrl} alt={selectedNovel.title} />\n          <button onClick={() => setView('home')}>Back to Home</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}