{"ast":null,"code":"\n// import React, { useState, useEffect } from 'react';\n// import UploadNovelForm from './UploadNovelForm';\n\n// function App() {\n//   const [novels, setNovels] = useState([]);\n//   const [selectedNovel, setSelectedNovel] = useState(null);\n//   const [view, setView] = useState('home'); // Possible values: home, upload, details\n\n//   // Load novels from localStorage when the component first mounts\n//   useEffect(() => {\n//     const savedNovels = JSON.parse(localStorage.getItem('novels')) || [];\n//     setNovels(savedNovels);\n//   }, []); // Empty dependency array means this effect runs once, on mount.\n\n//   // Save novels to localStorage whenever the novels state changes\n//   useEffect(() => {\n//     localStorage.setItem('novels', JSON.stringify(novels));\n//   }, [novels]); // This effect runs every time `novels` state changes.\n\n//   const addNovel = (novel) => {\n//     setNovels([...novels, novel]);\n//     setView('home');\n//   };\n\n//   const selectNovel = (novel) => {\n//     setSelectedNovel(novel);\n//     setView('details');\n//   };\n\n//   return (\n//     <div>\n//       {view === 'home' && (\n//         <div>\n//           <h1>Novel List</h1>\n//           <button onClick={() => setView('upload')}>Upload a Novel</button>\n//           <ul>\n//             {novels.map((novel, index) => (\n//               <li key={index} onClick={() => selectNovel(novel)}>\n//                 {novel.title}\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n\n//       {view === 'upload' && <UploadNovelForm addNovel={addNovel} />}\n\n//       {view === 'details' && selectedNovel && (\n//         <div>\n//           <h1>{selectedNovel.title}</h1>\n//           <p>Author: {selectedNovel.author}</p>\n//           <p>Genre: {selectedNovel.genre}</p>\n//           <p>Summary: {selectedNovel.summary}</p>\n//           <img src={selectedNovel.imageUrl} alt={selectedNovel.title} />\n//           <button onClick={() => setView('home')}>Back to Home</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/Mrudula/OneDrive/Desktop/Mrunal/prepinsta/Batch-02/Week_08/novel-blog/src/App.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import UploadNovelForm from './UploadNovelForm';\n\n// function App() {\n//   const [novels, setNovels] = useState([]);\n//   const [selectedNovel, setSelectedNovel] = useState(null);\n//   const [view, setView] = useState('home'); // Possible values: home, upload, details\n\n//   // Load novels from localStorage when the component first mounts\n//   useEffect(() => {\n//     const savedNovels = JSON.parse(localStorage.getItem('novels')) || [];\n//     setNovels(savedNovels);\n//   }, []); // Empty dependency array means this effect runs once, on mount.\n\n//   // Save novels to localStorage whenever the novels state changes\n//   useEffect(() => {\n//     localStorage.setItem('novels', JSON.stringify(novels));\n//   }, [novels]); // This effect runs every time `novels` state changes.\n\n//   const addNovel = (novel) => {\n//     setNovels([...novels, novel]);\n//     setView('home');\n//   };\n\n//   const selectNovel = (novel) => {\n//     setSelectedNovel(novel);\n//     setView('details');\n//   };\n\n//   return (\n//     <div>\n//       {view === 'home' && (\n//         <div>\n//           <h1>Novel List</h1>\n//           <button onClick={() => setView('upload')}>Upload a Novel</button>\n//           <ul>\n//             {novels.map((novel, index) => (\n//               <li key={index} onClick={() => selectNovel(novel)}>\n//                 {novel.title}\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n\n//       {view === 'upload' && <UploadNovelForm addNovel={addNovel} />}\n\n//       {view === 'details' && selectedNovel && (\n//         <div>\n//           <h1>{selectedNovel.title}</h1>\n//           <p>Author: {selectedNovel.author}</p>\n//           <p>Genre: {selectedNovel.genre}</p>\n//           <p>Summary: {selectedNovel.summary}</p>\n//           <img src={selectedNovel.imageUrl} alt={selectedNovel.title} />\n//           <button onClick={() => setView('home')}>Back to Home</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":";AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}