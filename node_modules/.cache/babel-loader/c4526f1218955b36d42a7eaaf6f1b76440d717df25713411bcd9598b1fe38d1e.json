{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mrudula\\\\OneDrive\\\\Desktop\\\\Mrunal\\\\prepinsta\\\\Batch-02\\\\Week_08\\\\novel-blog\\\\src\\\\UploadNovelForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// const UploadNovelForm = ({ addNovel }) => {\n//   const [title, setTitle] = useState('');\n//   const [author, setAuthor] = useState('');\n//   const [genre, setGenre] = useState('');\n//   const [summary, setSummary] = useState('');\n//   const [imageUrl, setImageUrl] = useState('');\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     addNovel({ title, author, genre, summary, imageUrl });\n//     setTitle('');\n//     setAuthor('');\n//     setGenre('');\n//     setSummary('');\n//     setImageUrl('');\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Title\" />\n//       <input value={author} onChange={(e) => setAuthor(e.target.value)} placeholder=\"Author\" />\n//       <input value={genre} onChange={(e) => setGenre(e.target.value)} placeholder=\"Genre\" />\n//       <textarea value={summary} onChange={(e) => setSummary(e.target.value)} placeholder=\"Summary\" />\n//       <input value={imageUrl} onChange={(e) => setImageUrl(e.target.value)} placeholder=\"Image URL\" />\n//       <button type=\"submit\">Upload Novel</button>\n//     </form>\n//   );\n// };\n\n// export default UploadNovelForm;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadNovelForm = ({\n  addNovel\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [genre, setGenre] = useState('');\n  const [summary, setSummary] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Create a new novel object\n    const newNovel = {\n      title,\n      author,\n      genre,\n      summary,\n      imageUrl\n    };\n    // Add the novel to the list\n    addNovel(newNovel);\n    // Clear the form fields\n    setTitle('');\n    setAuthor('');\n    setGenre('');\n    setSummary('');\n    setImageUrl('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"container-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-field\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-field\",\n      value: author,\n      onChange: e => setAuthor(e.target.value),\n      placeholder: \"Author\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-field\",\n      value: genre,\n      onChange: e => setGenre(e.target.value),\n      placeholder: \"Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"input-field\",\n      value: summary,\n      onChange: e => setSummary(e.target.value),\n      placeholder: \"Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-field\",\n      value: imageUrl,\n      onChange: e => setImageUrl(e.target.value),\n      placeholder: \"Image URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"input-field  btn\",\n      type: \"submit\",\n      children: \"Upload Novel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadNovelForm, \"FQ/fMHsaI8GYjvDXhj52wWRO1W8=\");\n_c = UploadNovelForm;\nexport default UploadNovelForm;\nvar _c;\n$RefreshReg$(_c, \"UploadNovelForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadNovelForm","addNovel","_s","title","setTitle","author","setAuthor","genre","setGenre","summary","setSummary","imageUrl","setImageUrl","handleSubmit","e","preventDefault","newNovel","className","onSubmit","children","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/Mrudula/OneDrive/Desktop/Mrunal/prepinsta/Batch-02/Week_08/novel-blog/src/UploadNovelForm.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// const UploadNovelForm = ({ addNovel }) => {\r\n//   const [title, setTitle] = useState('');\r\n//   const [author, setAuthor] = useState('');\r\n//   const [genre, setGenre] = useState('');\r\n//   const [summary, setSummary] = useState('');\r\n//   const [imageUrl, setImageUrl] = useState('');\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     addNovel({ title, author, genre, summary, imageUrl });\r\n//     setTitle('');\r\n//     setAuthor('');\r\n//     setGenre('');\r\n//     setSummary('');\r\n//     setImageUrl('');\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <input value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Title\" />\r\n//       <input value={author} onChange={(e) => setAuthor(e.target.value)} placeholder=\"Author\" />\r\n//       <input value={genre} onChange={(e) => setGenre(e.target.value)} placeholder=\"Genre\" />\r\n//       <textarea value={summary} onChange={(e) => setSummary(e.target.value)} placeholder=\"Summary\" />\r\n//       <input value={imageUrl} onChange={(e) => setImageUrl(e.target.value)} placeholder=\"Image URL\" />\r\n//       <button type=\"submit\">Upload Novel</button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default UploadNovelForm;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst UploadNovelForm = ({ addNovel }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n  const [genre, setGenre] = useState('');\r\n  const [summary, setSummary] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Create a new novel object\r\n    const newNovel = { title, author, genre, summary, imageUrl };\r\n    // Add the novel to the list\r\n    addNovel(newNovel);\r\n    // Clear the form fields\r\n    setTitle('');\r\n    setAuthor('');\r\n    setGenre('');\r\n    setSummary('');\r\n    setImageUrl('');\r\n  };\r\n\r\n  return (\r\n    <form className='container-form' onSubmit={handleSubmit}>\r\n      <input  className='input-field' value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Title\" />\r\n      <input className='input-field' value={author} onChange={(e) => setAuthor(e.target.value)} placeholder=\"Author\" />\r\n      <input className='input-field' value={genre} onChange={(e) => setGenre(e.target.value)} placeholder=\"Genre\" />\r\n      <textarea className='input-field' value={summary} onChange={(e) => setSummary(e.target.value)} placeholder=\"Summary\" />\r\n      <input className='input-field' value={imageUrl} onChange={(e) => setImageUrl(e.target.value)} placeholder=\"Image URL\" />\r\n      <button className='input-field  btn' type=\"submit\">Upload Novel</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UploadNovelForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}