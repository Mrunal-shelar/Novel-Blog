{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import UploadNovelForm from './UploadNovelForm';\n// import app from \"./App.css\";\n\n// function App() {\n//   // Default novels\n//   const defaultNovels = [\n//     {\n//       title: 'The Great Gatsby',\n//       author: 'F. Scott Fitzgerald',\n//       genre: 'Classic',\n//       summary: 'A story about the mysterious millionaire Jay Gatsby and his obsession with Daisy Buchanan.',\n//       imageUrl: 'https://example.com/gatsby.jpg'\n//     },\n//     {\n//       title: '1984',\n//       author: 'George Orwell',\n//       genre: 'Dystopian',\n//       summary: 'A depiction of a totalitarian regime in a future society governed by Big Brother.',\n//       imageUrl: 'https://example.com/1984.jpg'\n//     },\n//     {\n//       title: 'To Kill a Mockingbird',\n//       author: 'Harper Lee',\n//       genre: 'Fiction',\n//       summary: 'A novel set in the American South during the 1930s, focusing on racial injustice.',\n//       imageUrl: 'https://example.com/mockingbird.jpg'\n//     }\n//   ];\n\n//   const [novels, setNovels] = useState([]); // List of novels\n//   const [selectedNovel, setSelectedNovel] = useState(null); // Selected novel for details view\n//   const [view, setView] = useState('home'); // Tracks current view (home, upload, details)\n//   const [searchQuery, setSearchQuery] = useState(''); // Search query state\n\n//   // Load novels from localStorage or set default novels\n//   useEffect(() => {\n//     const savedNovels = JSON.parse(localStorage.getItem('novels')) || [];\n//     if (savedNovels.length > 0) {\n//       setNovels(savedNovels);\n//     } else {\n//       setNovels(defaultNovels); // If no novels in localStorage, use default novels\n//     }\n//   }, []);\n\n//   // Save novels to localStorage whenever the novels state changes\n//   useEffect(() => {\n//     if (novels.length > 0) {\n//       localStorage.setItem('novels', JSON.stringify(novels));\n//     }\n//   }, [novels]);\n\n//   // Function to add a new novel and switch back to home view\n//   const addNovel = (novel) => {\n//     setNovels([...novels, novel]); // Add the new novel to the list\n//     setView('home'); // Switch back to the home view immediately after uploading\n//   };\n\n//   const selectNovel = (novel) => {\n//     setSelectedNovel(novel);\n//     setView('details'); // Switch to the details view\n//   };\n\n//   // Filter novels based on the search query\n//   const filteredNovels = novels.filter((novel) =>\n//     novel.title.toLowerCase().includes(searchQuery.toLowerCase())\n//   );\n\n//   return (\n//     <div>\n//       {view === 'home' && (\n//         <div>\n//           <h1>Novel List</h1>\n\n//           {/* Search Bar */}\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search for a novel\"\n//             value={searchQuery}\n//             onChange={(e) => setSearchQuery(e.target.value)}\n//           />\n\n//           <button onClick={() => setView('upload')}>Upload a Novel</button>\n\n//           <ul>\n//             {filteredNovels.length > 0 ? (\n//               filteredNovels.map((novel, index) => (\n//                 <li key={index} onClick={() => selectNovel(novel)}>\n//                   <h2>{novel.title}</h2>\n//                   <p><strong>Author:</strong> {novel.author}</p>\n//                   <p><strong>Genre:</strong> {novel.genre}</p>\n//                   <p><strong>Summary:</strong> {novel.summary}</p>\n//                   {novel.imageUrl && <img src={novel.imageUrl} alt={novel.title} style={{ width: '100px', height: '150px' }} />}\n//                 </li>\n//               ))\n//             ) : (\n//               <p>No novels found</p>\n//             )}\n//           </ul>\n//         </div>\n//       )}\n\n//       {view === 'upload' && <UploadNovelForm addNovel={addNovel} />} {/* Pass addNovel as prop */}\n\n//       {view === 'details' && selectedNovel && (\n//         <div>\n//           <h1>{selectedNovel.title}</h1>\n//           <p><strong>Author:</strong> {selectedNovel.author}</p>\n//           <p><strong>Genre:</strong> {selectedNovel.genre}</p>\n//           <p><strong>Summary:</strong> {selectedNovel.summary}</p>\n//           {selectedNovel.imageUrl && <img src={selectedNovel.imageUrl} alt={selectedNovel.title} style={{ width: '200px', height: '300px' }} />}\n//           <button onClick={() => setView('home')}>Back to Home</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState, useEffect } from 'react';\n// import UploadNovelForm from './UploadNovelForm';\n// import './App.css';\n\n// function App() {\n//   const [novels, setNovels] = useState([]);\n//   const [view, setView] = useState('home');\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [darkMode, setDarkMode] = useState(false);\n\n//   useEffect(() => {\n//     const savedNovels = JSON.parse(localStorage.getItem('novels')) || [];\n//     setNovels(savedNovels);\n//   }, []);\n\n//   const addNovel = (novel) => {\n//     const updatedNovels = [...novels, novel];\n//     setNovels(updatedNovels);\n//     localStorage.setItem('novels', JSON.stringify(updatedNovels));\n//     setView('home');\n//   };\n\n//   const filteredNovels = novels.filter((novel) =>\n//     novel.title.toLowerCase().includes(searchQuery.toLowerCase())\n//   );\n\n//   // const toggleDarkMode = () => setDarkMode(!darkMode);\n\n//   return (\n//     <div className={darkMode ? 'dark-mode' : ''}>\n//       <nav className=\"navbar\">\n//         <h1>Novel Blog</h1>\n//         <input\n//           type=\"text\"\n//           className=\"search-bar\"\n//           placeholder=\"Search for a novel...\"\n//           value={searchQuery}\n//           onChange={(e) => setSearchQuery(e.target.value)}\n//         />\n//         {/* <button onClick={toggleDarkMode} className=\"mode-toggle\">\n//           {darkMode ? 'Light Mode' : 'Dark Mode'}\n//         </button> */}\n//       </nav>\n\n//       <div className=\"container\">\n//         {view === 'home' && (\n//           <>\n//             <div className=\"novel-grid\">\n//               {filteredNovels.length > 0 ? (\n//                 filteredNovels.map((novel, index) => (\n//                   <div key={index} className=\"novel-card\">\n//                     <img src={novel.imageUrl} alt={novel.title} className=\"novel-img\" />\n//                     <div className=\"novel-info\">\n//                       <h2>{novel.title}</h2>\n//                       <p><strong>Author:</strong> {novel.author}</p>\n//                       <p><strong>Genre:</strong> {novel.genre}</p>\n//                     </div>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <p>No novels found</p>\n//               )}\n//             </div>\n//             <button className=\"upload-button\" onClick={() => setView('upload')}>\n//               Upload a Novel\n//             </button>\n//           </>\n//         )}\n\n//         {view === 'upload' && (\n//           <div className=\"upload-form-container\">\n//             <UploadNovelForm addNovel={addNovel} />\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/Mrudula/OneDrive/Desktop/Mrunal/prepinsta/Batch-02/Week_08/novel-blog/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import UploadNovelForm from './UploadNovelForm';\n// import app from \"./App.css\";\n\n// function App() {\n//   // Default novels\n//   const defaultNovels = [\n//     {\n//       title: 'The Great Gatsby',\n//       author: 'F. Scott Fitzgerald',\n//       genre: 'Classic',\n//       summary: 'A story about the mysterious millionaire Jay Gatsby and his obsession with Daisy Buchanan.',\n//       imageUrl: 'https://example.com/gatsby.jpg'\n//     },\n//     {\n//       title: '1984',\n//       author: 'George Orwell',\n//       genre: 'Dystopian',\n//       summary: 'A depiction of a totalitarian regime in a future society governed by Big Brother.',\n//       imageUrl: 'https://example.com/1984.jpg'\n//     },\n//     {\n//       title: 'To Kill a Mockingbird',\n//       author: 'Harper Lee',\n//       genre: 'Fiction',\n//       summary: 'A novel set in the American South during the 1930s, focusing on racial injustice.',\n//       imageUrl: 'https://example.com/mockingbird.jpg'\n//     }\n//   ];\n\n//   const [novels, setNovels] = useState([]); // List of novels\n//   const [selectedNovel, setSelectedNovel] = useState(null); // Selected novel for details view\n//   const [view, setView] = useState('home'); // Tracks current view (home, upload, details)\n//   const [searchQuery, setSearchQuery] = useState(''); // Search query state\n\n//   // Load novels from localStorage or set default novels\n//   useEffect(() => {\n//     const savedNovels = JSON.parse(localStorage.getItem('novels')) || [];\n//     if (savedNovels.length > 0) {\n//       setNovels(savedNovels);\n//     } else {\n//       setNovels(defaultNovels); // If no novels in localStorage, use default novels\n//     }\n//   }, []);\n\n//   // Save novels to localStorage whenever the novels state changes\n//   useEffect(() => {\n//     if (novels.length > 0) {\n//       localStorage.setItem('novels', JSON.stringify(novels));\n//     }\n//   }, [novels]);\n\n//   // Function to add a new novel and switch back to home view\n//   const addNovel = (novel) => {\n//     setNovels([...novels, novel]); // Add the new novel to the list\n//     setView('home'); // Switch back to the home view immediately after uploading\n//   };\n\n//   const selectNovel = (novel) => {\n//     setSelectedNovel(novel);\n//     setView('details'); // Switch to the details view\n//   };\n\n//   // Filter novels based on the search query\n//   const filteredNovels = novels.filter((novel) =>\n//     novel.title.toLowerCase().includes(searchQuery.toLowerCase())\n//   );\n\n//   return (\n//     <div>\n//       {view === 'home' && (\n//         <div>\n//           <h1>Novel List</h1>\n\n//           {/* Search Bar */}\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search for a novel\"\n//             value={searchQuery}\n//             onChange={(e) => setSearchQuery(e.target.value)}\n//           />\n\n//           <button onClick={() => setView('upload')}>Upload a Novel</button>\n\n//           <ul>\n//             {filteredNovels.length > 0 ? (\n//               filteredNovels.map((novel, index) => (\n//                 <li key={index} onClick={() => selectNovel(novel)}>\n//                   <h2>{novel.title}</h2>\n//                   <p><strong>Author:</strong> {novel.author}</p>\n//                   <p><strong>Genre:</strong> {novel.genre}</p>\n//                   <p><strong>Summary:</strong> {novel.summary}</p>\n//                   {novel.imageUrl && <img src={novel.imageUrl} alt={novel.title} style={{ width: '100px', height: '150px' }} />}\n//                 </li>\n//               ))\n//             ) : (\n//               <p>No novels found</p>\n//             )}\n//           </ul>\n//         </div>\n//       )}\n\n//       {view === 'upload' && <UploadNovelForm addNovel={addNovel} />} {/* Pass addNovel as prop */}\n\n//       {view === 'details' && selectedNovel && (\n//         <div>\n//           <h1>{selectedNovel.title}</h1>\n//           <p><strong>Author:</strong> {selectedNovel.author}</p>\n//           <p><strong>Genre:</strong> {selectedNovel.genre}</p>\n//           <p><strong>Summary:</strong> {selectedNovel.summary}</p>\n//           {selectedNovel.imageUrl && <img src={selectedNovel.imageUrl} alt={selectedNovel.title} style={{ width: '200px', height: '300px' }} />}\n//           <button onClick={() => setView('home')}>Back to Home</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import UploadNovelForm from './UploadNovelForm';\n// import './App.css';\n\n// function App() {\n//   const [novels, setNovels] = useState([]);\n//   const [view, setView] = useState('home');\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [darkMode, setDarkMode] = useState(false);\n\n//   useEffect(() => {\n//     const savedNovels = JSON.parse(localStorage.getItem('novels')) || [];\n//     setNovels(savedNovels);\n//   }, []);\n\n//   const addNovel = (novel) => {\n//     const updatedNovels = [...novels, novel];\n//     setNovels(updatedNovels);\n//     localStorage.setItem('novels', JSON.stringify(updatedNovels));\n//     setView('home');\n//   };\n\n//   const filteredNovels = novels.filter((novel) =>\n//     novel.title.toLowerCase().includes(searchQuery.toLowerCase())\n//   );\n\n//   // const toggleDarkMode = () => setDarkMode(!darkMode);\n\n//   return (\n//     <div className={darkMode ? 'dark-mode' : ''}>\n//       <nav className=\"navbar\">\n//         <h1>Novel Blog</h1>\n//         <input\n//           type=\"text\"\n//           className=\"search-bar\"\n//           placeholder=\"Search for a novel...\"\n//           value={searchQuery}\n//           onChange={(e) => setSearchQuery(e.target.value)}\n//         />\n//         {/* <button onClick={toggleDarkMode} className=\"mode-toggle\">\n//           {darkMode ? 'Light Mode' : 'Dark Mode'}\n//         </button> */}\n//       </nav>\n\n//       <div className=\"container\">\n//         {view === 'home' && (\n//           <>\n//             <div className=\"novel-grid\">\n//               {filteredNovels.length > 0 ? (\n//                 filteredNovels.map((novel, index) => (\n//                   <div key={index} className=\"novel-card\">\n//                     <img src={novel.imageUrl} alt={novel.title} className=\"novel-img\" />\n//                     <div className=\"novel-info\">\n//                       <h2>{novel.title}</h2>\n//                       <p><strong>Author:</strong> {novel.author}</p>\n//                       <p><strong>Genre:</strong> {novel.genre}</p>\n//                     </div>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <p>No novels found</p>\n//               )}\n//             </div>\n//             <button className=\"upload-button\" onClick={() => setView('upload')}>\n//               Upload a Novel\n//             </button>\n//           </>\n//         )}\n\n//         {view === 'upload' && (\n//           <div className=\"upload-form-container\">\n//             <UploadNovelForm addNovel={addNovel} />\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\n\n\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}